@model List<RentalWeb.Web.ViewModels.Post.PostViewModel>

@{
    ViewData["Title"] = "Publicaciones Disponibles";
}

<div class="row justify-content-center text-center mb-5 mt-5">
    <div class="col-lg-9">
        <form asp-controller="PublicPosts" asp-action="Index" method="get">
            <div class="input-group mb-4 shadow-sm rounded-pill p-1">
                <span class="input-group-text border-0 bg-transparent ps-4" id="search-addon">
                    <i class="bi bi-search text-muted"></i>
                </span>
                <input type="text" class="form-control border-0 rounded-pill ps-2 pe-5 py-3"
                       placeholder="¿Qué estás buscando?" aria-label="Search" aria-describedby="search-addon"
                       name="searchTerm"
                       value="@ViewBag.CurrentSearchTerm"
                       id="postSearchInput">
                <button class="btn btn-primary rounded-pill me-1" type="submit" id="postSearchButton">Buscar</button>
            </div>
        </form>

        <div class="bg-info bg-opacity-10 p-4 rounded-3 border border-2 border-info border-dashed mb-5">
            <div class="d-flex align-items-center justify-content-center gap-3 mb-3">
                <i class="bi bi-camera fs-3 text-info"></i>
                <h2 class="h5 fw-semibold mb-0">Búsqueda por Imagen</h2>
            </div>
            <p class="text-muted mb-4">
                ¿No sabes cómo se llama? Sube una foto y encontraremos artículos similares
            </p>

            <input type="file" id="imageUploadInput" accept="image/*" class="d-none">
            <button class="btn btn-outline-primary d-inline-flex align-items-center gap-2" id="uploadImageButton">
                <i class="bi bi-upload"></i>
                Subir Imagen
            </button>

            <div id="imagePreviewContainer" class="mt-3" style="display: none;">
                <img id="imagePreview" src="#" alt="Vista previa de la imagen" class="img-fluid rounded shadow mb-3" style="max-height: 200px;">
                <button class="btn btn-success d-inline-flex align-items-center gap-2" id="searchByImageBtn">
                    <i class="bi bi-search"></i>
                    Buscar con esta Imagen
                </button>
                <button class="btn btn-danger btn-sm ms-2" id="clearImageBtn">
                    <i class="bi bi-x-circle"></i>
                    Borrar Imagen
                </button>
            </div>
            <div id="loadingSpinner" class="spinner-border text-primary mt-3" role="status" style="display: none;">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
    </div>
</div>

<div id="searchResultsSection" class="row" style="display: none;">
    <div class="col-12">
        <h2 class="h4 fw-bold mb-4">Resultados de la Búsqueda por Imagen</h2>
        <div id="searchResults" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        </div>
        <div id="noResultsMessage" class="alert alert-info mt-4" role="alert" style="display: none;">
            No se encontraron artículos que coincidan con la imagen.
        </div>
        <div class="text-center mt-4">
            <button id="showAllPostsButton" class="btn btn-outline-secondary" style="display: none;">
                <i class="bi bi-list"></i> Ver Todas las Publicaciones
            </button>
        </div>
    </div>
</div>

<div id="originalPostsContainer" class="row">
    @if (Model != null && Model.Any())
    {
        @foreach (var post in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm">
                    @if (!string.IsNullOrEmpty(post.ImageUrl))
                    {
                        <img src="@post.ImageUrl" class="card-img-top" alt="Imagen del Artículo" style="height: 200px; object-fit: cover;">
                    }
                    else
                    {
                        <img src="/images/default_item.jpg" class="card-img-top" alt="Imagen no disponible" style="height: 200px; object-fit: cover;">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@post.Title</h5>
                        <p class="card-text">@post.Description</p>
                        <p class="text-muted mb-1"><strong>Artículo:</strong> @post.ItemName</p>
                        <p class="text-muted mb-1"><strong>Estado:</strong> @post.Status</p>
                        <p class="text-muted mb-1"><strong>Stock:</strong> @post.QuantityAvailable</p>
                        <p class="text-muted mb-1"><strong>Tipo de Renta:</strong> @post.RentalType</p>
                        <p class="text-muted mb-1"><strong>Tarifa por unidad:</strong> @post.Price</p>
                        <p class="text-muted mb-1"><strong>Ubicación:</strong> @post.Location</p>
                        <p class="text-muted small">Publicado por: <strong>@post.UserName</strong></p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <a href="#" class="btn btn-primary btn-sm">Contactar al arrendatario</a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <p id="noOriginalPostsMessage">No hay publicaciones activas disponibles en este momento.</p>
        </div>
    }
</div>


@section Scripts {
    <style>
        /* Estilos CSS necesarios para la barra de búsqueda y la sección de imagen */
        .input-group > .form-control.rounded-pill {
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
        }

        .input-group > .btn.rounded-pill {
            z-index: 2; /* Ensure button is above input border */
            border-top-left-radius: 0 !important;
            border-bottom-left-radius: 0 !important;
        }
        /* Estilo para la búsqueda por imagen */
        .border-dashed {
            border-style: dashed !important;
        }

        /* Otros estilos que pudieras tener, como hover-shadow o hover-white */
        .hover-shadow:hover {
            box-shadow: 0 .5rem 1rem rgba(0,0,0,.15) !important;
        }

        .hover-white:hover {
            color: #fff !important;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const imageUploadInput = document.getElementById('imageUploadInput');
            const uploadImageButton = document.getElementById('uploadImageButton'); // Cambiado de homeImageSearchButton
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            const imagePreview = document.getElementById('imagePreview');
            const searchByImageBtn = document.getElementById('searchByImageBtn'); // Cambiado de searchImageButton
            const clearImageBtn = document.getElementById('clearImageBtn'); // Cambiado de clearImageButton
            const searchResultsSection = document.getElementById('searchResultsSection');
            const searchResultsDiv = document.getElementById('searchResults');
            const noResultsMessage = document.getElementById('noResultsMessage');
            const loadingSpinner = document.getElementById('loadingSpinner');
            const originalPostsContainer = document.getElementById('originalPostsContainer'); // Nuevo
            const showAllPostsButton = document.getElementById('showAllPostsButton'); // Nuevo

            let selectedFile = null;

            uploadImageButton.addEventListener('click', function () {
                imageUploadInput.click();
            });

            imageUploadInput.addEventListener('change', function (event) {
                const file = event.target.files[0];
                if (file) {
                    selectedFile = file;
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        imagePreview.src = e.target.result;
                        imagePreviewContainer.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                    // Cuando se sube una imagen, ocultar los posts originales y cualquier resultado anterior
                    originalPostsContainer.style.display = 'none';
                    searchResultsSection.style.display = 'none';
                    searchResultsDiv.innerHTML = '';
                    noResultsMessage.style.display = 'none';
                    showAllPostsButton.style.display = 'none'; // Ocultar el botón "Ver todas las publicaciones"
                } else {
                    imagePreviewContainer.style.display = 'none';
                    imagePreview.src = '#';
                    selectedFile = null;
                    // Si no se selecciona imagen, volver a mostrar los posts originales
                    originalPostsContainer.style.display = 'flex'; // Usar flexbox para que las cards se distribuyan bien
                    searchResultsSection.style.display = 'none';
                    showAllPostsButton.style.display = 'none';
                }
            });

            clearImageBtn.addEventListener('click', function() {
                imageUploadInput.value = '';
                selectedFile = null;
                imagePreview.src = '#';
                imagePreviewContainer.style.display = 'none';
                searchResultsSection.style.display = 'none';
                searchResultsDiv.innerHTML = '';
                noResultsMessage.style.display = 'none';
                // Mostrar los posts originales de nuevo al borrar la imagen
                originalPostsContainer.style.display = 'flex'; // Usar flexbox
                showAllPostsButton.style.display = 'none';
            });

            searchByImageBtn.addEventListener('click', async function () {
                if (!selectedFile) {
                    alert('Por favor, selecciona una imagen primero.');
                    return;
                }

                loadingSpinner.style.display = 'block';
                searchResultsSection.style.display = 'none';
                searchResultsDiv.innerHTML = '';
                noResultsMessage.style.display = 'none';
                originalPostsContainer.style.display = 'none'; // Ocultar los posts originales
                showAllPostsButton.style.display = 'none';

                const formData = new FormData();
                formData.append('imageFile', selectedFile);

                try {
                    const response = await fetch('/api/Search/image', {
                        method: 'POST',
                        body: formData
                    });

                    if (response.ok) {
                        const data = await response.json();

                        loadingSpinner.style.display = 'none';

                        if (data && data.length > 0) {
                            searchResultsSection.style.display = 'block';
                            searchResultsDiv.innerHTML = '';

                            data.forEach(post => {
                                const cardHtml = `
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100 shadow-sm">
                                            <img src="${post.imageUrl || '/images/default_item.jpg'}" class="card-img-top" alt="${post.itemName || 'Artículo'}" style="height: 200px; object-fit: cover;">
                                            <div class="card-body">
                                                <h5 class="card-title">${post.title || 'Título no disponible'}</h5>
                                                <p class="card-text">${post.description || 'Descripción no disponible'}</p>
                                                <p class="text-muted mb-1"><strong>Artículo:</strong> ${post.itemName || 'N/A'}</p>
                                                <p class="text-muted mb-1"><strong>Estado:</strong> ${post.status || 'N/A'}</p>
                                                <p class="text-muted mb-1"><strong>Stock:</strong> ${post.quantityAvailable || 'N/A'}</p>
                                                <p class="text-muted mb-1"><strong>Tipo de Renta:</strong> ${post.rentalType || 'N/A'}</p>
                                                <p class="text-muted mb-1"><strong>Tarifa por unidad:</strong> $${post.price?.toFixed(2) || '0.00'}</p>
                                                <p class="text-muted mb-1"><strong>Ubicación:</strong> ${post.location || 'N/A'}</p>
                                                <p class="text-muted small">Publicado por: <strong>${post.userName || 'Desconocido'}</strong></p>
                                            </div>
                                            <div class="card-footer bg-transparent border-top-0">
                                                <a href="#" class="btn btn-primary btn-sm">Contactar al arrendatario</a>
                                            </div>
                                        </div>
                                    </div>
                                `;
                                searchResultsDiv.insertAdjacentHTML('beforeend', cardHtml);
                            });
                            showAllPostsButton.style.display = 'block'; // Mostrar el botón "Ver todas las publicaciones"
                        } else {
                            searchResultsSection.style.display = 'block';
                            noResultsMessage.style.display = 'block';
                            showAllPostsButton.style.display = 'block'; // Mostrar el botón "Ver todas las publicaciones"
                        }
                    } else {
                        loadingSpinner.style.display = 'none';
                        alert('Error al buscar artículos: ' + response.statusText);
                        console.error('Error al buscar artículos:', await response.text());
                        originalPostsContainer.style.display = 'flex'; // Mostrar posts originales en caso de error
                    }
                } catch (error) {
                    loadingSpinner.style.display = 'none';
                    alert('Ocurrió un error en la comunicación con el servidor.');
                    console.error('Error de red o en la petición:', error);
                    originalPostsContainer.style.display = 'flex'; // Mostrar posts originales en caso de error
                }
            });

            // Botón para volver a ver todas las publicaciones originales
            showAllPostsButton.addEventListener('click', function() {
                searchResultsSection.style.display = 'none'; // Ocultar resultados de búsqueda
                searchResultsDiv.innerHTML = ''; // Limpiar resultados
                noResultsMessage.style.display = 'none'; // Ocultar mensaje de no resultados
                imageUploadInput.value = ''; // Limpiar el input file
                selectedFile = null;
                imagePreview.src = '#';
                imagePreviewContainer.style.display = 'none'; // Ocultar previsualización
                originalPostsContainer.style.display = 'flex'; // Mostrar posts originales
                showAllPostsButton.style.display = 'none'; // Ocultar este botón
            });
        });
    </script>
}